name: "Terraform Plan"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - '**.tf'

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [Stage, Prod]
    name: Plan for ${{ matrix.env }}
    permissions:
      pull-requests: write
    steps:
      - name: Upper Name for Environment
        id: env-upper
        run: echo "ENV_UPPER=$(echo ${{ matrix.env }} | tr [:lower:] [:upper:])" >> $GITHUB_ENV
      
      - name: Lower Name for Environment
        id: env-lower
        run: echo "ENV_LOWER=$(echo ${{ matrix.env }} | tr [:upper:] [:lower:])" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Authenticate
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./${{ env.ENV_LOWER }}
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}"
        working-directory: ./${{ env.ENV_LOWER }}
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./${{ env.ENV_LOWER }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -var="project=${{ vars[format('GCP_PROJECT_ID_{0}', env.ENV_UPPER)] }}" -no-color -input=false
        working-directory: ./${{ env.ENV_LOWER }}
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### ${{ matrix.env }} Environment üèû
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      # - name: Terraform Apply
      #  if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #  run: terraform apply -auto-approve -var="project=${{ vars.GCP_PROJECT_ID }}" -input=false